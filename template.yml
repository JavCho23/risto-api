# This is the SAM template that represents the architecture of your serverless application
# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template-basics.html

# The AWSTemplateFormatVersion identifies the capabilities of the template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/format-version-structure.html
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  This app will manage all Risto data

# Transform section specifies one or more macros that AWS CloudFormation uses to process your template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-section-structure.html
Transform: AWS::Serverless-2016-10-31

# Shared configuration for all resources, more in
# https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    # The PermissionsBoundary allows users to safely develop with their function's permissions constrained
    # to their current application. All the functions and roles in this application have to include it and
    # it has to be manually updated when you add resources to your application.
    # More information in https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html
    PermissionsBoundary: !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/${AppId}-${AWS::Region}-PermissionsBoundary"

Parameters:
  AppId:
    Type: String

# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

  # This is a Lambda function config associated with the source code: hello-from-lambda.js
  helloFromLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: src/handlers/hello-from-lambda.helloFromLambdaHandler
      Runtime: nodejs10.x
      MemorySize: 128
      Timeout: 60
      Description: A Lambda function that returns a static string.
      Policies:
        # Give Lambda basic execution Permission to the helloFromLambda
        - AWSLambdaBasicExecutionRole
  mealFeedFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: src/client/products/meal/aplication/list/meal_feed_handler.feedItemsHandler
      Runtime: nodejs10.x
      MemorySize: 128
      Timeout: 60
      Description: A Lambda function that returns all meals of risto.
      Policies:
        # Give Lambda basic execution Permission to the helloFromLambda
        - AWSLambdaBasicExecutionRole
  mealFindFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: src/client/products/meal/aplication/find/meal_finder_handler.mealFindHandler
      Runtime: nodejs10.x
      MemorySize: 128
      Timeout: 60
      Description: A Lambda function that returns one meal of risto.
      Policies:
        # Give Lambda basic execution Permission to the helloFromLambda
        - AWSLambdaBasicExecutionRole
  authVerifyFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: src/auth/token/aplication/auth_verify_handler.authVerifyHandler
      Runtime: nodejs10.x
      MemorySize: 128
      Timeout: 60
      Description: A Lambda function that authorizer risto.
      Policies:
        # Give Lambda basic execution Permission to the helloFromLambda
        - AWSLambdaBasicExecutionRole

  authLoginFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: src/auth/token/aplication/auth_login_handler.authLoginHandler
      Runtime: nodejs10.x
      MemorySize: 128
      Timeout: 60
      Description: A Lambda function that authorizer risto.
      Policies:
        # Give Lambda basic execution Permission to the helloFromLambda
        - AWSLambdaBasicExecutionRole

  qualificationsListForMealFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: src/client/community/qualifications/aplication/qualifications_list_handler.qualificationListHandler
      Runtime: nodejs10.x
      MemorySize: 128
      Timeout: 60
      Description: A Lambda function that return all qualifications for one meal.
      Policies:
        # Give Lambda basic execution Permission to the helloFromLambda
        - AWSLambdaBasicExecutionRole

  askListFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: src/manager/community/ask/aplication/ask_lister_handler.askListHandler
      Runtime: nodejs10.x
      MemorySize: 128
      Timeout: 60
      Description: A Lambda function that return all local asks.
      Policies:
        # Give Lambda basic execution Permission to the helloFromLambda
        - AWSLambdaBasicExecutionRole

  localStatsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: src/manager/community/local/stats/aplication/stats_get_handler.statsGetHandler
      Runtime: nodejs10.x
      MemorySize: 128
      Timeout: 60
      Description: A Lambda function that return local stats.
      Policies:
        # Give Lambda basic execution Permission to the helloFromLambda
        - AWSLambdaBasicExecutionRole
  answerRegisterFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: src/manager/community/answer/aplication/answer_register_handler.answerRegisterHandler
      Runtime: nodejs10.x
      MemorySize: 128
      Timeout: 60
      Description: A Lambda function that register a local answer.
      Policies:
        # Give Lambda basic execution Permission to the helloFromLambda
        - AWSLambdaBasicExecutionRole